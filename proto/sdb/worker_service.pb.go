// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: worker_service.proto

package sdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type PrepareTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIdentify *TaskIdentify `protobuf:"bytes,1,opt,name=task_identify,json=taskIdentify,proto3" json:"task_identify,omitempty"`
	Sessionid    uint64        `protobuf:"varint,4,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uid          uint64        `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`
	Dbid         uint64        `protobuf:"varint,6,opt,name=dbid,proto3" json:"dbid,omitempty"`
	WorkerId     uint64        `protobuf:"varint,7,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Sql          string        `protobuf:"bytes,10,opt,name=sql,proto3" json:"sql,omitempty"`
	QueryInfo    []byte        `protobuf:"bytes,11,opt,name=query_info,json=queryInfo,proto3" json:"query_info,omitempty"`
	PlanInfo     []byte        `protobuf:"bytes,12,opt,name=plan_info,json=planInfo,proto3" json:"plan_info,omitempty"`
	PlanInfoDxl  []byte        `protobuf:"bytes,13,opt,name=plan_info_dxl,json=planInfoDxl,proto3" json:"plan_info_dxl,omitempty"`
	PlanParams   []byte        `protobuf:"bytes,14,opt,name=plan_params,json=planParams,proto3" json:"plan_params,omitempty"`
	GucVersion   uint64        `protobuf:"varint,20,opt,name=guc_version,json=gucVersion,proto3" json:"guc_version,omitempty"`
	// repeated LakeRelVersion versions = 21;
	// repeated WorkerInfo workers = 22;
	CatalogList []*RelFiles           `protobuf:"bytes,21,rep,name=catalog_list,json=catalogList,proto3" json:"catalog_list,omitempty"`
	UserRelList []*RelFiles           `protobuf:"bytes,22,rep,name=user_rel_list,json=userRelList,proto3" json:"user_rel_list,omitempty"`
	SliceTable  *PBSliceTable         `protobuf:"bytes,23,opt,name=slice_table,json=sliceTable,proto3" json:"slice_table,omitempty"`
	Workers     map[int32]*WorkerInfo `protobuf:"bytes,24,rep,name=workers,proto3" json:"workers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // worker id -> info
	ResultDir   string                `protobuf:"bytes,25,opt,name=result_dir,json=resultDir,proto3" json:"result_dir,omitempty"`
	DbSpace     *LakeSpace            `protobuf:"bytes,26,opt,name=db_space,json=dbSpace,proto3" json:"db_space,omitempty"` // default space
	ResultSpace *LakeSpace            `protobuf:"bytes,27,opt,name=result_space,json=resultSpace,proto3" json:"result_space,omitempty"`
}

func (x *PrepareTaskRequest) Reset() {
	*x = PrepareTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareTaskRequest) ProtoMessage() {}

func (x *PrepareTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareTaskRequest.ProtoReflect.Descriptor instead.
func (*PrepareTaskRequest) Descriptor() ([]byte, []int) {
	return file_worker_service_proto_rawDescGZIP(), []int{0}
}

func (x *PrepareTaskRequest) GetTaskIdentify() *TaskIdentify {
	if x != nil {
		return x.TaskIdentify
	}
	return nil
}

func (x *PrepareTaskRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *PrepareTaskRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PrepareTaskRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *PrepareTaskRequest) GetWorkerId() uint64 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *PrepareTaskRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *PrepareTaskRequest) GetQueryInfo() []byte {
	if x != nil {
		return x.QueryInfo
	}
	return nil
}

func (x *PrepareTaskRequest) GetPlanInfo() []byte {
	if x != nil {
		return x.PlanInfo
	}
	return nil
}

func (x *PrepareTaskRequest) GetPlanInfoDxl() []byte {
	if x != nil {
		return x.PlanInfoDxl
	}
	return nil
}

func (x *PrepareTaskRequest) GetPlanParams() []byte {
	if x != nil {
		return x.PlanParams
	}
	return nil
}

func (x *PrepareTaskRequest) GetGucVersion() uint64 {
	if x != nil {
		return x.GucVersion
	}
	return 0
}

func (x *PrepareTaskRequest) GetCatalogList() []*RelFiles {
	if x != nil {
		return x.CatalogList
	}
	return nil
}

func (x *PrepareTaskRequest) GetUserRelList() []*RelFiles {
	if x != nil {
		return x.UserRelList
	}
	return nil
}

func (x *PrepareTaskRequest) GetSliceTable() *PBSliceTable {
	if x != nil {
		return x.SliceTable
	}
	return nil
}

func (x *PrepareTaskRequest) GetWorkers() map[int32]*WorkerInfo {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *PrepareTaskRequest) GetResultDir() string {
	if x != nil {
		return x.ResultDir
	}
	return ""
}

func (x *PrepareTaskRequest) GetDbSpace() *LakeSpace {
	if x != nil {
		return x.DbSpace
	}
	return nil
}

func (x *PrepareTaskRequest) GetResultSpace() *LakeSpace {
	if x != nil {
		return x.ResultSpace
	}
	return nil
}

// The response message containing the greetings
type PrepareTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PrepareTaskReply) Reset() {
	*x = PrepareTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareTaskReply) ProtoMessage() {}

func (x *PrepareTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_worker_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareTaskReply.ProtoReflect.Descriptor instead.
func (*PrepareTaskReply) Descriptor() ([]byte, []int) {
	return file_worker_service_proto_rawDescGZIP(), []int{1}
}

func (x *PrepareTaskReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskIdentify *TaskIdentify `protobuf:"bytes,1,opt,name=task_identify,json=taskIdentify,proto3" json:"task_identify,omitempty"`
}

func (x *StartTaskRequest) Reset() {
	*x = StartTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskRequest) ProtoMessage() {}

func (x *StartTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskRequest.ProtoReflect.Descriptor instead.
func (*StartTaskRequest) Descriptor() ([]byte, []int) {
	return file_worker_service_proto_rawDescGZIP(), []int{2}
}

func (x *StartTaskRequest) GetTaskIdentify() *TaskIdentify {
	if x != nil {
		return x.TaskIdentify
	}
	return nil
}

type StartTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartTaskReply) Reset() {
	*x = StartTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskReply) ProtoMessage() {}

func (x *StartTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_worker_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskReply.ProtoReflect.Descriptor instead.
func (*StartTaskReply) Descriptor() ([]byte, []int) {
	return file_worker_service_proto_rawDescGZIP(), []int{3}
}

type MotionStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToTaskIdentify *TaskIdentify `protobuf:"bytes,1,opt,name=to_task_identify,json=toTaskIdentify,proto3" json:"to_task_identify,omitempty"`
	MotionId       int32         `protobuf:"varint,2,opt,name=motion_id,json=motionId,proto3" json:"motion_id,omitempty"`
	FromSlice      int32         `protobuf:"varint,3,opt,name=from_slice,json=fromSlice,proto3" json:"from_slice,omitempty"`
	ToSlice        int32         `protobuf:"varint,4,opt,name=to_slice,json=toSlice,proto3" json:"to_slice,omitempty"`
	FromSegindex   int32         `protobuf:"varint,5,opt,name=from_segindex,json=fromSegindex,proto3" json:"from_segindex,omitempty"`
	ToSegindex     int32         `protobuf:"varint,6,opt,name=to_segindex,json=toSegindex,proto3" json:"to_segindex,omitempty"`
	FromRoute      int32         `protobuf:"varint,7,opt,name=from_route,json=fromRoute,proto3" json:"from_route,omitempty"`
	ToRoute        int32         `protobuf:"varint,8,opt,name=to_route,json=toRoute,proto3" json:"to_route,omitempty"`
}

func (x *MotionStreamRequest) Reset() {
	*x = MotionStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotionStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotionStreamRequest) ProtoMessage() {}

func (x *MotionStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotionStreamRequest.ProtoReflect.Descriptor instead.
func (*MotionStreamRequest) Descriptor() ([]byte, []int) {
	return file_worker_service_proto_rawDescGZIP(), []int{4}
}

func (x *MotionStreamRequest) GetToTaskIdentify() *TaskIdentify {
	if x != nil {
		return x.ToTaskIdentify
	}
	return nil
}

func (x *MotionStreamRequest) GetMotionId() int32 {
	if x != nil {
		return x.MotionId
	}
	return 0
}

func (x *MotionStreamRequest) GetFromSlice() int32 {
	if x != nil {
		return x.FromSlice
	}
	return 0
}

func (x *MotionStreamRequest) GetToSlice() int32 {
	if x != nil {
		return x.ToSlice
	}
	return 0
}

func (x *MotionStreamRequest) GetFromSegindex() int32 {
	if x != nil {
		return x.FromSegindex
	}
	return 0
}

func (x *MotionStreamRequest) GetToSegindex() int32 {
	if x != nil {
		return x.ToSegindex
	}
	return 0
}

func (x *MotionStreamRequest) GetFromRoute() int32 {
	if x != nil {
		return x.FromRoute
	}
	return 0
}

func (x *MotionStreamRequest) GetToRoute() int32 {
	if x != nil {
		return x.ToRoute
	}
	return 0
}

type MotionStreamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succ    bool   `protobuf:"varint,1,opt,name=succ,proto3" json:"succ,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MotionStreamReply) Reset() {
	*x = MotionStreamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_worker_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotionStreamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotionStreamReply) ProtoMessage() {}

func (x *MotionStreamReply) ProtoReflect() protoreflect.Message {
	mi := &file_worker_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotionStreamReply.ProtoReflect.Descriptor instead.
func (*MotionStreamReply) Descriptor() ([]byte, []int) {
	return file_worker_service_proto_rawDescGZIP(), []int{5}
}

func (x *MotionStreamReply) GetSucc() bool {
	if x != nil {
		return x.Succ
	}
	return false
}

func (x *MotionStreamReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_worker_service_proto protoreflect.FileDescriptor

var file_worker_service_proto_rawDesc = []byte{
	0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x64, 0x62, 0x1a, 0x10, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6b, 0x76, 0x70, 0x61, 0x69,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x06, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x64, 0x78, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x78, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x75,
	0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x67, 0x75, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0c, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x0b, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x0b, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50, 0x42, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18,
	0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64,
	0x69, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x44, 0x69, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x64, 0x62, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4c, 0x61, 0x6b, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x07, 0x64, 0x62, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x31,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4c, 0x61, 0x6b, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x1a, 0x4b, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c,
	0x0a, 0x10, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x10,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x0d, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa9, 0x02, 0x0a, 0x13, 0x4d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x74, 0x6f, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x64, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x0e, 0x74, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x6f, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73,
	0x65, 0x67, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x65, 0x67, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x5f, 0x73, 0x65, 0x67, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x53, 0x65, 0x67, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x6f, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xbf, 0x01, 0x0a, 0x06, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x64, 0x62,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x05, 0x2e,
	0x2f, 0x73, 0x64, 0x62, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_worker_service_proto_rawDescOnce sync.Once
	file_worker_service_proto_rawDescData = file_worker_service_proto_rawDesc
)

func file_worker_service_proto_rawDescGZIP() []byte {
	file_worker_service_proto_rawDescOnce.Do(func() {
		file_worker_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_worker_service_proto_rawDescData)
	})
	return file_worker_service_proto_rawDescData
}

var file_worker_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_worker_service_proto_goTypes = []interface{}{
	(*PrepareTaskRequest)(nil),  // 0: sdb.PrepareTaskRequest
	(*PrepareTaskReply)(nil),    // 1: sdb.PrepareTaskReply
	(*StartTaskRequest)(nil),    // 2: sdb.StartTaskRequest
	(*StartTaskReply)(nil),      // 3: sdb.StartTaskReply
	(*MotionStreamRequest)(nil), // 4: sdb.MotionStreamRequest
	(*MotionStreamReply)(nil),   // 5: sdb.MotionStreamReply
	nil,                         // 6: sdb.PrepareTaskRequest.WorkersEntry
	(*TaskIdentify)(nil),        // 7: sdb.TaskIdentify
	(*RelFiles)(nil),            // 8: sdb.RelFiles
	(*PBSliceTable)(nil),        // 9: sdb.PBSliceTable
	(*LakeSpace)(nil),           // 10: sdb.LakeSpace
	(*WorkerInfo)(nil),          // 11: sdb.WorkerInfo
}
var file_worker_service_proto_depIdxs = []int32{
	7,  // 0: sdb.PrepareTaskRequest.task_identify:type_name -> sdb.TaskIdentify
	8,  // 1: sdb.PrepareTaskRequest.catalog_list:type_name -> sdb.RelFiles
	8,  // 2: sdb.PrepareTaskRequest.user_rel_list:type_name -> sdb.RelFiles
	9,  // 3: sdb.PrepareTaskRequest.slice_table:type_name -> sdb.PBSliceTable
	6,  // 4: sdb.PrepareTaskRequest.workers:type_name -> sdb.PrepareTaskRequest.WorkersEntry
	10, // 5: sdb.PrepareTaskRequest.db_space:type_name -> sdb.LakeSpace
	10, // 6: sdb.PrepareTaskRequest.result_space:type_name -> sdb.LakeSpace
	7,  // 7: sdb.StartTaskRequest.task_identify:type_name -> sdb.TaskIdentify
	7,  // 8: sdb.MotionStreamRequest.to_task_identify:type_name -> sdb.TaskIdentify
	11, // 9: sdb.PrepareTaskRequest.WorkersEntry.value:type_name -> sdb.WorkerInfo
	0,  // 10: sdb.Worker.Prepare:input_type -> sdb.PrepareTaskRequest
	2,  // 11: sdb.Worker.Start:input_type -> sdb.StartTaskRequest
	4,  // 12: sdb.Worker.StartStream:input_type -> sdb.MotionStreamRequest
	1,  // 13: sdb.Worker.Prepare:output_type -> sdb.PrepareTaskReply
	3,  // 14: sdb.Worker.Start:output_type -> sdb.StartTaskReply
	5,  // 15: sdb.Worker.StartStream:output_type -> sdb.MotionStreamReply
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_worker_service_proto_init() }
func file_worker_service_proto_init() {
	if File_worker_service_proto != nil {
		return
	}
	file_workerinfo_proto_init()
	file_task_proto_init()
	file_kvpair_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_worker_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotionStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_worker_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotionStreamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_worker_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_worker_service_proto_goTypes,
		DependencyIndexes: file_worker_service_proto_depIdxs,
		MessageInfos:      file_worker_service_proto_msgTypes,
	}.Build()
	File_worker_service_proto = out.File
	file_worker_service_proto_rawDesc = nil
	file_worker_service_proto_goTypes = nil
	file_worker_service_proto_depIdxs = nil
}
