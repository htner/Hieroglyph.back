// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: task.proto

package sdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PBExecSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliceIndex      int32   `protobuf:"varint,1,opt,name=slice_index,json=sliceIndex,proto3" json:"slice_index,omitempty"`
	RootIndex       int32   `protobuf:"varint,2,opt,name=root_index,json=rootIndex,proto3" json:"root_index,omitempty"`
	ParentIndex     int32   `protobuf:"varint,3,opt,name=parent_index,json=parentIndex,proto3" json:"parent_index,omitempty"`
	PlanNumSegments int32   `protobuf:"varint,4,opt,name=plan_num_segments,json=planNumSegments,proto3" json:"plan_num_segments,omitempty"`
	Children        []int32 `protobuf:"varint,5,rep,packed,name=children,proto3" json:"children,omitempty"` // restart
	GangType        int32   `protobuf:"varint,6,opt,name=gang_type,json=gangType,proto3" json:"gang_type,omitempty"`
	Segments        []int32 `protobuf:"varint,7,rep,packed,name=segments,proto3" json:"segments,omitempty"`
}

func (x *PBExecSlice) Reset() {
	*x = PBExecSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBExecSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBExecSlice) ProtoMessage() {}

func (x *PBExecSlice) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBExecSlice.ProtoReflect.Descriptor instead.
func (*PBExecSlice) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{0}
}

func (x *PBExecSlice) GetSliceIndex() int32 {
	if x != nil {
		return x.SliceIndex
	}
	return 0
}

func (x *PBExecSlice) GetRootIndex() int32 {
	if x != nil {
		return x.RootIndex
	}
	return 0
}

func (x *PBExecSlice) GetParentIndex() int32 {
	if x != nil {
		return x.ParentIndex
	}
	return 0
}

func (x *PBExecSlice) GetPlanNumSegments() int32 {
	if x != nil {
		return x.PlanNumSegments
	}
	return 0
}

func (x *PBExecSlice) GetChildren() []int32 {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *PBExecSlice) GetGangType() int32 {
	if x != nil {
		return x.GangType
	}
	return 0
}

func (x *PBExecSlice) GetSegments() []int32 {
	if x != nil {
		return x.Segments
	}
	return nil
}

type PBSliceTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalSlice        int32          `protobuf:"varint,1,opt,name=local_slice,json=localSlice,proto3" json:"local_slice,omitempty"`
	Slices            []*PBExecSlice `protobuf:"bytes,2,rep,name=slices,proto3" json:"slices,omitempty"`
	HasMotions        bool           `protobuf:"varint,4,opt,name=has_motions,json=hasMotions,proto3" json:"has_motions,omitempty"`
	InstrumentOptions int64          `protobuf:"varint,5,opt,name=instrument_options,json=instrumentOptions,proto3" json:"instrument_options,omitempty"`
	IcInstanceId      uint32         `protobuf:"varint,6,opt,name=ic_instance_id,json=icInstanceId,proto3" json:"ic_instance_id,omitempty"`
	Sql               string         `protobuf:"bytes,7,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *PBSliceTable) Reset() {
	*x = PBSliceTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSliceTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSliceTable) ProtoMessage() {}

func (x *PBSliceTable) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSliceTable.ProtoReflect.Descriptor instead.
func (*PBSliceTable) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{1}
}

func (x *PBSliceTable) GetLocalSlice() int32 {
	if x != nil {
		return x.LocalSlice
	}
	return 0
}

func (x *PBSliceTable) GetSlices() []*PBExecSlice {
	if x != nil {
		return x.Slices
	}
	return nil
}

func (x *PBSliceTable) GetHasMotions() bool {
	if x != nil {
		return x.HasMotions
	}
	return false
}

func (x *PBSliceTable) GetInstrumentOptions() int64 {
	if x != nil {
		return x.InstrumentOptions
	}
	return 0
}

func (x *PBSliceTable) GetIcInstanceId() uint32 {
	if x != nil {
		return x.IcInstanceId
	}
	return 0
}

func (x *PBSliceTable) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type TaskIdentify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId uint64 `protobuf:"varint,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	SliceId int32  `protobuf:"varint,2,opt,name=slice_id,json=sliceId,proto3" json:"slice_id,omitempty"`
	SegId   int32  `protobuf:"varint,3,opt,name=seg_id,json=segId,proto3" json:"seg_id,omitempty"`
}

func (x *TaskIdentify) Reset() {
	*x = TaskIdentify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskIdentify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskIdentify) ProtoMessage() {}

func (x *TaskIdentify) ProtoReflect() protoreflect.Message {
	mi := &file_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskIdentify.ProtoReflect.Descriptor instead.
func (*TaskIdentify) Descriptor() ([]byte, []int) {
	return file_task_proto_rawDescGZIP(), []int{2}
}

func (x *TaskIdentify) GetQueryId() uint64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *TaskIdentify) GetSliceId() int32 {
	if x != nil {
		return x.SliceId
	}
	return 0
}

func (x *TaskIdentify) GetSegId() int32 {
	if x != nil {
		return x.SegId
	}
	return 0
}

var File_task_proto protoreflect.FileDescriptor

var file_task_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x64,
	0x62, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x50, 0x42, 0x45, 0x78, 0x65, 0x63, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x75, 0x6d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x67, 0x61, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xe1, 0x01, 0x0a, 0x0c, 0x50, 0x42, 0x53, 0x6c, 0x69, 0x63,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50, 0x42,
	0x45, 0x78, 0x65, 0x63, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x63, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x22, 0x5b, 0x0a, 0x0c, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x65, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x65, 0x67, 0x49, 0x64, 0x42, 0x0a, 0x5a, 0x05, 0x2e, 0x2f, 0x73, 0x64, 0x62, 0x80,
	0x01, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_task_proto_rawDescOnce sync.Once
	file_task_proto_rawDescData = file_task_proto_rawDesc
)

func file_task_proto_rawDescGZIP() []byte {
	file_task_proto_rawDescOnce.Do(func() {
		file_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_task_proto_rawDescData)
	})
	return file_task_proto_rawDescData
}

var file_task_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_task_proto_goTypes = []interface{}{
	(*PBExecSlice)(nil),  // 0: sdb.PBExecSlice
	(*PBSliceTable)(nil), // 1: sdb.PBSliceTable
	(*TaskIdentify)(nil), // 2: sdb.TaskIdentify
}
var file_task_proto_depIdxs = []int32{
	0, // 0: sdb.PBSliceTable.slices:type_name -> sdb.PBExecSlice
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_task_proto_init() }
func file_task_proto_init() {
	if File_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBExecSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSliceTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskIdentify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_proto_goTypes,
		DependencyIndexes: file_task_proto_depIdxs,
		MessageInfos:      file_task_proto_msgTypes,
	}.Build()
	File_task_proto = out.File
	file_task_proto_rawDesc = nil
	file_task_proto_goTypes = nil
	file_task_proto_depIdxs = nil
}
