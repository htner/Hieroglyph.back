// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: schedule_service.proto

package sdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type ExecQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sql            string            `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	Sid            uint64            `protobuf:"varint,3,opt,name=sid,proto3" json:"sid,omitempty"`
	Uid            uint64            `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Dbid           uint64            `protobuf:"varint,5,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Uuid           string            `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"` // if uuid is not empty, request will be exector exactly once
	OrganizationId uint64            `protobuf:"varint,7,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Organization   string            `protobuf:"bytes,8,opt,name=organization,proto3" json:"organization,omitempty"`
	Params         map[string]string `protobuf:"bytes,9,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExecQueryRequest) Reset() {
	*x = ExecQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecQueryRequest) ProtoMessage() {}

func (x *ExecQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecQueryRequest) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExecQueryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecQueryRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ExecQueryRequest) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *ExecQueryRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ExecQueryRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *ExecQueryRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ExecQueryRequest) GetOrganizationId() uint64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *ExecQueryRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *ExecQueryRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

// The response message containing the greetings
type ExecQueryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId   uint64            `protobuf:"varint,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Sessionid uint64            `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uid       uint64            `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Dbid      uint64            `protobuf:"varint,4,opt,name=dbid,proto3" json:"dbid,omitempty"`
	ResultDir string            `protobuf:"bytes,5,opt,name=result_dir,json=resultDir,proto3" json:"result_dir,omitempty"`
	Params    map[string]string `protobuf:"bytes,10,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExecQueryReply) Reset() {
	*x = ExecQueryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecQueryReply) ProtoMessage() {}

func (x *ExecQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecQueryReply.ProtoReflect.Descriptor instead.
func (*ExecQueryReply) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExecQueryReply) GetQueryId() uint64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *ExecQueryReply) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *ExecQueryReply) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ExecQueryReply) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *ExecQueryReply) GetResultDir() string {
	if x != nil {
		return x.ResultDir
	}
	return ""
}

func (x *ExecQueryReply) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type PushWorkerResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId    *TaskIdentify     `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Sessionid uint64            `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Dbid      uint64            `protobuf:"varint,3,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Result    *WorkerResultData `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PushWorkerResultRequest) Reset() {
	*x = PushWorkerResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushWorkerResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWorkerResultRequest) ProtoMessage() {}

func (x *PushWorkerResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWorkerResultRequest.ProtoReflect.Descriptor instead.
func (*PushWorkerResultRequest) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{2}
}

func (x *PushWorkerResultRequest) GetTaskId() *TaskIdentify {
	if x != nil {
		return x.TaskId
	}
	return nil
}

func (x *PushWorkerResultRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *PushWorkerResultRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *PushWorkerResultRequest) GetResult() *WorkerResultData {
	if x != nil {
		return x.Result
	}
	return nil
}

type PushWorkerResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode int32  `protobuf:"varint,1,opt,name=rescode,proto3" json:"rescode,omitempty"`
	Resmsg  string `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
}

func (x *PushWorkerResultReply) Reset() {
	*x = PushWorkerResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushWorkerResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWorkerResultReply) ProtoMessage() {}

func (x *PushWorkerResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWorkerResultReply.ProtoReflect.Descriptor instead.
func (*PushWorkerResultReply) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{3}
}

func (x *PushWorkerResultReply) GetRescode() int32 {
	if x != nil {
		return x.Rescode
	}
	return 0
}

func (x *PushWorkerResultReply) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

type CheckQueryResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId   uint64 `protobuf:"varint,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Sessionid uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uid       uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Dbid      uint64 `protobuf:"varint,4,opt,name=dbid,proto3" json:"dbid,omitempty"`
}

func (x *CheckQueryResultRequest) Reset() {
	*x = CheckQueryResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckQueryResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckQueryResultRequest) ProtoMessage() {}

func (x *CheckQueryResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckQueryResultRequest.ProtoReflect.Descriptor instead.
func (*CheckQueryResultRequest) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{4}
}

func (x *CheckQueryResultRequest) GetQueryId() uint64 {
	if x != nil {
		return x.QueryId
	}
	return 0
}

func (x *CheckQueryResultRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *CheckQueryResultRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CheckQueryResultRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

type CheckQueryResultReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode int32             `protobuf:"varint,1,opt,name=rescode,proto3" json:"rescode,omitempty"`
	Resmsg  string            `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
	Result  *WorkerResultData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckQueryResultReply) Reset() {
	*x = CheckQueryResultReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckQueryResultReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckQueryResultReply) ProtoMessage() {}

func (x *CheckQueryResultReply) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckQueryResultReply.ProtoReflect.Descriptor instead.
func (*CheckQueryResultReply) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{5}
}

func (x *CheckQueryResultReply) GetRescode() int32 {
	if x != nil {
		return x.Rescode
	}
	return 0
}

func (x *CheckQueryResultReply) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

func (x *CheckQueryResultReply) GetResult() *WorkerResultData {
	if x != nil {
		return x.Result
	}
	return nil
}

type NewWorkerIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster uint32 `protobuf:"varint,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *NewWorkerIdRequest) Reset() {
	*x = NewWorkerIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewWorkerIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewWorkerIdRequest) ProtoMessage() {}

func (x *NewWorkerIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewWorkerIdRequest.ProtoReflect.Descriptor instead.
func (*NewWorkerIdRequest) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{6}
}

func (x *NewWorkerIdRequest) GetCluster() uint32 {
	if x != nil {
		return x.Cluster
	}
	return 0
}

type NewWorkerIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId uint64 `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
}

func (x *NewWorkerIdReply) Reset() {
	*x = NewWorkerIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewWorkerIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewWorkerIdReply) ProtoMessage() {}

func (x *NewWorkerIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewWorkerIdReply.ProtoReflect.Descriptor instead.
func (*NewWorkerIdReply) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{7}
}

func (x *NewWorkerIdReply) GetWorkerId() uint64 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

type WorkerPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId     uint64      `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	Cluster      uint32      `protobuf:"varint,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Addr         string      `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	State        WorkerState `protobuf:"varint,4,opt,name=state,proto3,enum=sdb.WorkerState" json:"state,omitempty"`
	CurrectIndex uint64      `protobuf:"varint,5,opt,name=currect_index,json=currectIndex,proto3" json:"currect_index,omitempty"`
}

func (x *WorkerPingRequest) Reset() {
	*x = WorkerPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerPingRequest) ProtoMessage() {}

func (x *WorkerPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerPingRequest.ProtoReflect.Descriptor instead.
func (*WorkerPingRequest) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerPingRequest) GetWorkerId() uint64 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *WorkerPingRequest) GetCluster() uint32 {
	if x != nil {
		return x.Cluster
	}
	return 0
}

func (x *WorkerPingRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *WorkerPingRequest) GetState() WorkerState {
	if x != nil {
		return x.State
	}
	return WorkerState_WSInit
}

func (x *WorkerPingRequest) GetCurrectIndex() uint64 {
	if x != nil {
		return x.CurrectIndex
	}
	return 0
}

type WorkerPongReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rescode int32  `protobuf:"varint,1,opt,name=rescode,proto3" json:"rescode,omitempty"`
	Resmsg  string `protobuf:"bytes,2,opt,name=resmsg,proto3" json:"resmsg,omitempty"`
}

func (x *WorkerPongReply) Reset() {
	*x = WorkerPongReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerPongReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerPongReply) ProtoMessage() {}

func (x *WorkerPongReply) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerPongReply.ProtoReflect.Descriptor instead.
func (*WorkerPongReply) Descriptor() ([]byte, []int) {
	return file_schedule_service_proto_rawDescGZIP(), []int{9}
}

func (x *WorkerPongReply) GetRescode() int32 {
	if x != nil {
		return x.Rescode
	}
	return 0
}

func (x *WorkerPongReply) GetResmsg() string {
	if x != nil {
		return x.Resmsg
	}
	return ""
}

var File_schedule_service_proto protoreflect.FileDescriptor

var file_schedule_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x64, 0x62, 0x1a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6b, 0x76, 0x70, 0x61, 0x69,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x02, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x71, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x64,
	0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x82, 0x02, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64,
	0x62, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44,
	0x69, 0x72, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x49, 0x0a, 0x15, 0x50, 0x75, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x22, 0x78, 0x0a, 0x17, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x64, 0x62, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d, 0x73, 0x67, 0x12,
	0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2e,
	0x0a, 0x12, 0x4e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x2f,
	0x0a, 0x10, 0x4e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xab, 0x01, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x43, 0x0a,
	0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x6d,
	0x73, 0x67, 0x32, 0xe1, 0x02, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x64, 0x62, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x64,
	0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x62, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x64,
	0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x62, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4e, 0x65, 0x77,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x73, 0x64, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x05, 0x2e, 0x2f, 0x73, 0x64, 0x62, 0x80,
	0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schedule_service_proto_rawDescOnce sync.Once
	file_schedule_service_proto_rawDescData = file_schedule_service_proto_rawDesc
)

func file_schedule_service_proto_rawDescGZIP() []byte {
	file_schedule_service_proto_rawDescOnce.Do(func() {
		file_schedule_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_schedule_service_proto_rawDescData)
	})
	return file_schedule_service_proto_rawDescData
}

var file_schedule_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_schedule_service_proto_goTypes = []interface{}{
	(*ExecQueryRequest)(nil),        // 0: sdb.ExecQueryRequest
	(*ExecQueryReply)(nil),          // 1: sdb.ExecQueryReply
	(*PushWorkerResultRequest)(nil), // 2: sdb.PushWorkerResultRequest
	(*PushWorkerResultReply)(nil),   // 3: sdb.PushWorkerResultReply
	(*CheckQueryResultRequest)(nil), // 4: sdb.CheckQueryResultRequest
	(*CheckQueryResultReply)(nil),   // 5: sdb.CheckQueryResultReply
	(*NewWorkerIdRequest)(nil),      // 6: sdb.NewWorkerIdRequest
	(*NewWorkerIdReply)(nil),        // 7: sdb.NewWorkerIdReply
	(*WorkerPingRequest)(nil),       // 8: sdb.WorkerPingRequest
	(*WorkerPongReply)(nil),         // 9: sdb.WorkerPongReply
	nil,                             // 10: sdb.ExecQueryRequest.ParamsEntry
	nil,                             // 11: sdb.ExecQueryReply.ParamsEntry
	(*TaskIdentify)(nil),            // 12: sdb.TaskIdentify
	(*WorkerResultData)(nil),        // 13: sdb.WorkerResultData
	(WorkerState)(0),                // 14: sdb.WorkerState
}
var file_schedule_service_proto_depIdxs = []int32{
	10, // 0: sdb.ExecQueryRequest.params:type_name -> sdb.ExecQueryRequest.ParamsEntry
	11, // 1: sdb.ExecQueryReply.params:type_name -> sdb.ExecQueryReply.ParamsEntry
	12, // 2: sdb.PushWorkerResultRequest.task_id:type_name -> sdb.TaskIdentify
	13, // 3: sdb.PushWorkerResultRequest.result:type_name -> sdb.WorkerResultData
	13, // 4: sdb.CheckQueryResultReply.result:type_name -> sdb.WorkerResultData
	14, // 5: sdb.WorkerPingRequest.state:type_name -> sdb.WorkerState
	0,  // 6: sdb.Schedule.Depart:input_type -> sdb.ExecQueryRequest
	2,  // 7: sdb.Schedule.PushWorkerResult:input_type -> sdb.PushWorkerResultRequest
	4,  // 8: sdb.Schedule.CheckQueryResult:input_type -> sdb.CheckQueryResultRequest
	6,  // 9: sdb.Schedule.NewWorkerId:input_type -> sdb.NewWorkerIdRequest
	8,  // 10: sdb.Schedule.WorkerPing:input_type -> sdb.WorkerPingRequest
	1,  // 11: sdb.Schedule.Depart:output_type -> sdb.ExecQueryReply
	3,  // 12: sdb.Schedule.PushWorkerResult:output_type -> sdb.PushWorkerResultReply
	5,  // 13: sdb.Schedule.CheckQueryResult:output_type -> sdb.CheckQueryResultReply
	7,  // 14: sdb.Schedule.NewWorkerId:output_type -> sdb.NewWorkerIdReply
	9,  // 15: sdb.Schedule.WorkerPing:output_type -> sdb.WorkerPongReply
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_schedule_service_proto_init() }
func file_schedule_service_proto_init() {
	if File_schedule_service_proto != nil {
		return
	}
	file_task_proto_init()
	file_kvpair_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_schedule_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecQueryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushWorkerResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushWorkerResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckQueryResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckQueryResultReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewWorkerIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewWorkerIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerPongReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schedule_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schedule_service_proto_goTypes,
		DependencyIndexes: file_schedule_service_proto_depIdxs,
		MessageInfos:      file_schedule_service_proto_msgTypes,
	}.Build()
	File_schedule_service_proto = out.File
	file_schedule_service_proto_rawDesc = nil
	file_schedule_service_proto_goTypes = nil
	file_schedule_service_proto_depIdxs = nil
}
