// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: lake_service.proto

package sdb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enums for type of operation represented by a Query or PlanTree
type LockType int32

const (
	LockType_LOCKTAG_RELATION        LockType = 0 // whole relation
	LockType_LOCKTAG_RELATION_EXTEND LockType = 1 // the right to extend a relation
	LockType_LOCKTAG_TRANSACTION     LockType = 2 // transaction (for waiting for xact done)
)

// Enum value maps for LockType.
var (
	LockType_name = map[int32]string{
		0: "LOCKTAG_RELATION",
		1: "LOCKTAG_RELATION_EXTEND",
		2: "LOCKTAG_TRANSACTION",
	}
	LockType_value = map[string]int32{
		"LOCKTAG_RELATION":        0,
		"LOCKTAG_RELATION_EXTEND": 1,
		"LOCKTAG_TRANSACTION":     2,
	}
)

func (x LockType) Enum() *LockType {
	p := new(LockType)
	*p = x
	return p
}

func (x LockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockType) Descriptor() protoreflect.EnumDescriptor {
	return file_lake_service_proto_enumTypes[0].Descriptor()
}

func (LockType) Type() protoreflect.EnumType {
	return &file_lake_service_proto_enumTypes[0]
}

func (x LockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockType.Descriptor instead.
func (LockType) EnumDescriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{0}
}

type StartTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64 `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Uid       uint64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *StartTransactionRequest) Reset() {
	*x = StartTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTransactionRequest) ProtoMessage() {}

func (x *StartTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTransactionRequest.ProtoReflect.Descriptor instead.
func (*StartTransactionRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{0}
}

func (x *StartTransactionRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *StartTransactionRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *StartTransactionRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type StartTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartTransactionResponse) Reset() {
	*x = StartTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTransactionResponse) ProtoMessage() {}

func (x *StartTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTransactionResponse.ProtoReflect.Descriptor instead.
func (*StartTransactionResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{1}
}

type AllocateXidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64 `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Read      bool   `protobuf:"varint,3,opt,name=read,proto3" json:"read,omitempty"`
	Write     bool   `protobuf:"varint,4,opt,name=write,proto3" json:"write,omitempty"`
}

func (x *AllocateXidRequest) Reset() {
	*x = AllocateXidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateXidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateXidRequest) ProtoMessage() {}

func (x *AllocateXidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateXidRequest.ProtoReflect.Descriptor instead.
func (*AllocateXidRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{2}
}

func (x *AllocateXidRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *AllocateXidRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *AllocateXidRequest) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *AllocateXidRequest) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

type AllocateXidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadXid  uint64 `protobuf:"varint,1,opt,name=read_xid,json=readXid,proto3" json:"read_xid,omitempty"`
	WriteXid uint64 `protobuf:"varint,2,opt,name=write_xid,json=writeXid,proto3" json:"write_xid,omitempty"`
}

func (x *AllocateXidResponse) Reset() {
	*x = AllocateXidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateXidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateXidResponse) ProtoMessage() {}

func (x *AllocateXidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateXidResponse.ProtoReflect.Descriptor instead.
func (*AllocateXidResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{3}
}

func (x *AllocateXidResponse) GetReadXid() uint64 {
	if x != nil {
		return x.ReadXid
	}
	return 0
}

func (x *AllocateXidResponse) GetWriteXid() uint64 {
	if x != nil {
		return x.WriteXid
	}
	return 0
}

type CommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64 `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{4}
}

func (x *CommitRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *CommitRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

type CommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{5}
}

type AbortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64 `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
}

func (x *AbortRequest) Reset() {
	*x = AbortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortRequest) ProtoMessage() {}

func (x *AbortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortRequest.ProtoReflect.Descriptor instead.
func (*AbortRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{6}
}

func (x *AbortRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *AbortRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

type AbortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbortResponse) Reset() {
	*x = AbortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortResponse) ProtoMessage() {}

func (x *AbortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortResponse.ProtoReflect.Descriptor instead.
func (*AbortResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{7}
}

type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64   `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64   `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Rel       uint64   `protobuf:"varint,3,opt,name=rel,proto3" json:"rel,omitempty"`
	LockType  LockType `protobuf:"varint,4,opt,name=lock_type,json=lockType,proto3,enum=sdb.LockType" json:"lock_type,omitempty"`
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{8}
}

func (x *LockRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *LockRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *LockRequest) GetRel() uint64 {
	if x != nil {
		return x.Rel
	}
	return 0
}

func (x *LockRequest) GetLockType() LockType {
	if x != nil {
		return x.LockType
	}
	return LockType_LOCKTAG_RELATION
}

type LockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{9}
}

type UnockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64   `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64   `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Rel       uint64   `protobuf:"varint,3,opt,name=rel,proto3" json:"rel,omitempty"`
	LockType  LockType `protobuf:"varint,4,opt,name=lock_type,json=lockType,proto3,enum=sdb.LockType" json:"lock_type,omitempty"`
}

func (x *UnockRequest) Reset() {
	*x = UnockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnockRequest) ProtoMessage() {}

func (x *UnockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnockRequest.ProtoReflect.Descriptor instead.
func (*UnockRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{10}
}

func (x *UnockRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *UnockRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *UnockRequest) GetRel() uint64 {
	if x != nil {
		return x.Rel
	}
	return 0
}

func (x *UnockRequest) GetLockType() LockType {
	if x != nil {
		return x.LockType
	}
	return LockType_LOCKTAG_RELATION
}

type UnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{11}
}

type PrepareInsertFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid      uint64 `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Rel       uint64 `protobuf:"varint,4,opt,name=rel,proto3" json:"rel,omitempty"`
	Commandid uint64 `protobuf:"varint,5,opt,name=commandid,proto3" json:"commandid,omitempty"`
	Count     uint64 `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"` //repeated string add_files = 6;
}

func (x *PrepareInsertFilesRequest) Reset() {
	*x = PrepareInsertFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareInsertFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareInsertFilesRequest) ProtoMessage() {}

func (x *PrepareInsertFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareInsertFilesRequest.ProtoReflect.Descriptor instead.
func (*PrepareInsertFilesRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{12}
}

func (x *PrepareInsertFilesRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *PrepareInsertFilesRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *PrepareInsertFilesRequest) GetRel() uint64 {
	if x != nil {
		return x.Rel
	}
	return 0
}

func (x *PrepareInsertFilesRequest) GetCommandid() uint64 {
	if x != nil {
		return x.Commandid
	}
	return 0
}

func (x *PrepareInsertFilesRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PrepareInsertFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*LakeFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *PrepareInsertFilesResponse) Reset() {
	*x = PrepareInsertFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareInsertFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareInsertFilesResponse) ProtoMessage() {}

func (x *PrepareInsertFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareInsertFilesResponse.ProtoReflect.Descriptor instead.
func (*PrepareInsertFilesResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{13}
}

func (x *PrepareInsertFilesResponse) GetFiles() []*LakeFile {
	if x != nil {
		return x.Files
	}
	return nil
}

type DeleteFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid        uint64      `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid   uint64      `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Commandid   uint64      `protobuf:"varint,4,opt,name=commandid,proto3" json:"commandid,omitempty"`
	Rel         uint64      `protobuf:"varint,5,opt,name=rel,proto3" json:"rel,omitempty"`
	RemoveFiles []*LakeFile `protobuf:"bytes,6,rep,name=remove_files,json=removeFiles,proto3" json:"remove_files,omitempty"`
}

func (x *DeleteFilesRequest) Reset() {
	*x = DeleteFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilesRequest) ProtoMessage() {}

func (x *DeleteFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilesRequest.ProtoReflect.Descriptor instead.
func (*DeleteFilesRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteFilesRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *DeleteFilesRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *DeleteFilesRequest) GetCommandid() uint64 {
	if x != nil {
		return x.Commandid
	}
	return 0
}

func (x *DeleteFilesRequest) GetRel() uint64 {
	if x != nil {
		return x.Rel
	}
	return 0
}

func (x *DeleteFilesRequest) GetRemoveFiles() []*LakeFile {
	if x != nil {
		return x.RemoveFiles
	}
	return nil
}

type DeleteFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFilesResponse) Reset() {
	*x = DeleteFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilesResponse) ProtoMessage() {}

func (x *DeleteFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilesResponse.ProtoReflect.Descriptor instead.
func (*DeleteFilesResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{15}
}

type GetFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbid                 uint64 `protobuf:"varint,1,opt,name=dbid,proto3" json:"dbid,omitempty"`
	Sessionid            uint64 `protobuf:"varint,2,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	Commandid            uint64 `protobuf:"varint,5,opt,name=commandid,proto3" json:"commandid,omitempty"`
	Rel                  uint64 `protobuf:"varint,6,opt,name=rel,proto3" json:"rel,omitempty"`
	SliceCount           uint64 `protobuf:"varint,7,opt,name=slice_count,json=sliceCount,proto3" json:"slice_count,omitempty"`
	SliceSegIndex        uint64 `protobuf:"varint,8,opt,name=slice_seg_index,json=sliceSegIndex,proto3" json:"slice_seg_index,omitempty"`
	RelVersion           uint64 `protobuf:"varint,9,opt,name=rel_version,json=relVersion,proto3" json:"rel_version,omitempty"`
	RelLastModifyQueryid uint64 `protobuf:"varint,10,opt,name=rel_last_modify_queryid,json=relLastModifyQueryid,proto3" json:"rel_last_modify_queryid,omitempty"`
	IsWrite              bool   `protobuf:"varint,11,opt,name=is_write,json=isWrite,proto3" json:"is_write,omitempty"`
}

func (x *GetFilesRequest) Reset() {
	*x = GetFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesRequest) ProtoMessage() {}

func (x *GetFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesRequest.ProtoReflect.Descriptor instead.
func (*GetFilesRequest) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetFilesRequest) GetDbid() uint64 {
	if x != nil {
		return x.Dbid
	}
	return 0
}

func (x *GetFilesRequest) GetSessionid() uint64 {
	if x != nil {
		return x.Sessionid
	}
	return 0
}

func (x *GetFilesRequest) GetCommandid() uint64 {
	if x != nil {
		return x.Commandid
	}
	return 0
}

func (x *GetFilesRequest) GetRel() uint64 {
	if x != nil {
		return x.Rel
	}
	return 0
}

func (x *GetFilesRequest) GetSliceCount() uint64 {
	if x != nil {
		return x.SliceCount
	}
	return 0
}

func (x *GetFilesRequest) GetSliceSegIndex() uint64 {
	if x != nil {
		return x.SliceSegIndex
	}
	return 0
}

func (x *GetFilesRequest) GetRelVersion() uint64 {
	if x != nil {
		return x.RelVersion
	}
	return 0
}

func (x *GetFilesRequest) GetRelLastModifyQueryid() uint64 {
	if x != nil {
		return x.RelLastModifyQueryid
	}
	return 0
}

func (x *GetFilesRequest) GetIsWrite() bool {
	if x != nil {
		return x.IsWrite
	}
	return false
}

type GetFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files   []*LakeFile `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Version string      `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetFilesResponse) Reset() {
	*x = GetFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lake_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesResponse) ProtoMessage() {}

func (x *GetFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lake_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesResponse.ProtoReflect.Descriptor instead.
func (*GetFilesResponse) Descriptor() ([]byte, []int) {
	return file_lake_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetFilesResponse) GetFiles() []*LakeFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetFilesResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_lake_service_proto protoreflect.FileDescriptor

var file_lake_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6c, 0x61, 0x6b, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x64, 0x62, 0x1a, 0x0c, 0x6b, 0x76, 0x70, 0x61, 0x69,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x70, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x58, 0x69,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x58, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72,
	0x65, 0x61, 0x64, 0x58, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x58, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x0c, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x0b, 0x4c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x65, 0x6c, 0x12, 0x2a,
	0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x4c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x0c, 0x55, 0x6e,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x65, 0x6c, 0x12, 0x2a,
	0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x19, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x41, 0x0a, 0x1a, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4c, 0x61, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x65, 0x6c, 0x12, 0x30,
	0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x4c, 0x61, 0x6b, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x62, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x72, 0x65, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x65, 0x6c, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x72, 0x65, 0x6c, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x22, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x64, 0x62, 0x2e, 0x4c, 0x61, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x56, 0x0a, 0x08,
	0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x4f, 0x43, 0x4b,
	0x54, 0x41, 0x47, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x4c, 0x4f, 0x43, 0x4b, 0x54, 0x41, 0x47, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4c,
	0x4f, 0x43, 0x4b, 0x54, 0x41, 0x47, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x32, 0xd4, 0x03, 0x0a, 0x04, 0x4c, 0x61, 0x6b, 0x65, 0x12, 0x46, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x58, 0x69, 0x64, 0x12, 0x17, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x58, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x64, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x58, 0x69, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x06, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30,
	0x0a, 0x05, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x11, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x64, 0x62,
	0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x73,
	0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x05, 0x2e,
	0x2f, 0x73, 0x64, 0x62, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lake_service_proto_rawDescOnce sync.Once
	file_lake_service_proto_rawDescData = file_lake_service_proto_rawDesc
)

func file_lake_service_proto_rawDescGZIP() []byte {
	file_lake_service_proto_rawDescOnce.Do(func() {
		file_lake_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_lake_service_proto_rawDescData)
	})
	return file_lake_service_proto_rawDescData
}

var file_lake_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lake_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_lake_service_proto_goTypes = []interface{}{
	(LockType)(0),                      // 0: sdb.LockType
	(*StartTransactionRequest)(nil),    // 1: sdb.StartTransactionRequest
	(*StartTransactionResponse)(nil),   // 2: sdb.StartTransactionResponse
	(*AllocateXidRequest)(nil),         // 3: sdb.AllocateXidRequest
	(*AllocateXidResponse)(nil),        // 4: sdb.AllocateXidResponse
	(*CommitRequest)(nil),              // 5: sdb.CommitRequest
	(*CommitResponse)(nil),             // 6: sdb.CommitResponse
	(*AbortRequest)(nil),               // 7: sdb.AbortRequest
	(*AbortResponse)(nil),              // 8: sdb.AbortResponse
	(*LockRequest)(nil),                // 9: sdb.LockRequest
	(*LockResponse)(nil),               // 10: sdb.LockResponse
	(*UnockRequest)(nil),               // 11: sdb.UnockRequest
	(*UnlockResponse)(nil),             // 12: sdb.UnlockResponse
	(*PrepareInsertFilesRequest)(nil),  // 13: sdb.PrepareInsertFilesRequest
	(*PrepareInsertFilesResponse)(nil), // 14: sdb.PrepareInsertFilesResponse
	(*DeleteFilesRequest)(nil),         // 15: sdb.DeleteFilesRequest
	(*DeleteFilesResponse)(nil),        // 16: sdb.DeleteFilesResponse
	(*GetFilesRequest)(nil),            // 17: sdb.GetFilesRequest
	(*GetFilesResponse)(nil),           // 18: sdb.GetFilesResponse
	(*LakeFile)(nil),                   // 19: sdb.LakeFile
}
var file_lake_service_proto_depIdxs = []int32{
	0,  // 0: sdb.LockRequest.lock_type:type_name -> sdb.LockType
	0,  // 1: sdb.UnockRequest.lock_type:type_name -> sdb.LockType
	19, // 2: sdb.PrepareInsertFilesResponse.files:type_name -> sdb.LakeFile
	19, // 3: sdb.DeleteFilesRequest.remove_files:type_name -> sdb.LakeFile
	19, // 4: sdb.GetFilesResponse.files:type_name -> sdb.LakeFile
	1,  // 5: sdb.Lake.Start:input_type -> sdb.StartTransactionRequest
	3,  // 6: sdb.Lake.AllocateXid:input_type -> sdb.AllocateXidRequest
	5,  // 7: sdb.Lake.Commit:input_type -> sdb.CommitRequest
	7,  // 8: sdb.Lake.Abort:input_type -> sdb.AbortRequest
	13, // 9: sdb.Lake.PrepareInsertFiles:input_type -> sdb.PrepareInsertFilesRequest
	15, // 10: sdb.Lake.DeleteFiles:input_type -> sdb.DeleteFilesRequest
	17, // 11: sdb.Lake.GetFileList:input_type -> sdb.GetFilesRequest
	2,  // 12: sdb.Lake.Start:output_type -> sdb.StartTransactionResponse
	4,  // 13: sdb.Lake.AllocateXid:output_type -> sdb.AllocateXidResponse
	6,  // 14: sdb.Lake.Commit:output_type -> sdb.CommitResponse
	8,  // 15: sdb.Lake.Abort:output_type -> sdb.AbortResponse
	14, // 16: sdb.Lake.PrepareInsertFiles:output_type -> sdb.PrepareInsertFilesResponse
	16, // 17: sdb.Lake.DeleteFiles:output_type -> sdb.DeleteFilesResponse
	18, // 18: sdb.Lake.GetFileList:output_type -> sdb.GetFilesResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_lake_service_proto_init() }
func file_lake_service_proto_init() {
	if File_lake_service_proto != nil {
		return
	}
	file_kvpair_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lake_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateXidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateXidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareInsertFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareInsertFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lake_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lake_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lake_service_proto_goTypes,
		DependencyIndexes: file_lake_service_proto_depIdxs,
		EnumInfos:         file_lake_service_proto_enumTypes,
		MessageInfos:      file_lake_service_proto_msgTypes,
	}.Build()
	File_lake_service_proto = out.File
	file_lake_service_proto_rawDesc = nil
	file_lake_service_proto_goTypes = nil
	file_lake_service_proto_depIdxs = nil
}
